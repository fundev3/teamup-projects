trigger:
  branches:
    include:
      - main
      - develop

pr:
  branches:
    include:
      - main
      - develop
  drafts: false

pool:
  vmImage: ubuntu-latest

variables:
  projects: '**/**/*.sln'

stages:
- stage: Build
  displayName: Build

  jobs: 
  - job: Build

    steps:
    - task: UseDotNet@2
      displayName: 'DotNet Install'
      inputs:
        packageType: 'sdk'
        version: '3.x'

    - task: DotNetCoreCLI@2
      displayName: 'Dotnet Build'
      inputs:
        command: 'build'
        projects: $(projects)
        arguments: '--output $(Build.ArtifactStagingDirectory) $(styleCopEnabled)'
    
    - task: DotNetCoreCLI@2
      displayName: 'Dotnet Test'
      inputs:
        command: 'test'
        projects: $(testsProjects)

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      displayName: 'Drop Artifact'
      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  displayName: Deploy
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))

  jobs: 
  - job: Deploy
    displayName: Deploy
    
    steps:    
    - task: DownloadBuildArtifacts@1
      displayName: 'Download Artifact'
      inputs:
        buildType: 'current'
        downloadType: 'single'
        itemPattern: 'drop/$(Build.BuildId).zip'
        downloadPath: '$(System.ArtifactsDirectory)'
    - task: AzureFunctionApp@1
      displayName: 'Deploy API'
      inputs:
        azureSubscription: 'devlevel3-dev (a797242d-ce60-41aa-98ca-2e22d5221cfe)'
        appType: 'functionAppLinux'
        appName: 'fa-tuapi-projects-dev-bra'
        package: '$(System.ArtifactsDirectory)/drop/$(Build.BuildId).zip'
        runtimeStack: 'DOTNET|3.1'
